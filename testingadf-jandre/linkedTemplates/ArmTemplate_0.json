{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testingadf-jandre"
		},
		"TestDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestDB'"
		},
		"TestDB2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestDB2'"
		},
		"logs_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'logs'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TestDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TestDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestDB2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TestDB2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/logs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('logs_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mail-test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SendFail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "UpdateStatus",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southafricanorth.logic.azure.com:443/workflows/a050d80bf26c4e19be23b6e385a1d93d/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=sixScIUMyWNTqOzd7Fz4unpjxBV81k7GTpmoXmYw2tA",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"message\": \"@{activity('UpdateStatus').error.Message}\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\",\n    \"receiver\" : \"@{pipeline().parameters.receiver}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UpdateStatus",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "TestDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SELECT * FROM DDIC"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"receiver": {
						"type": "string",
						"defaultValue": "Jandre.Badenhorst@OMNIA.CO.ZA"
					}
				},
				"folder": {
					"name": "POC"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-09T11:31:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestDB2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "logs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestDB2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "logs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "logs.csv",
						"container": "petrol"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/logs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV-to-SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "dateinserted",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": false,
									"keys": [
										"date",
										"odometer"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "logid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "logid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "garage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "garage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "odometer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "odometer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "carRegistration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "carRegistration",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "litersPurchase",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "litersPurchase",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "totalcost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "totalcost",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dateinserted",
											"type": "String"
										},
										"sink": {
											"name": "dateinserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "logs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TestTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/logs')]",
				"[concat(variables('factoryId'), '/datasets/TestTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testmail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Getnames",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TNAME, Status FROM DDIC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TestTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Getnames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Getnames').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "update",
									"description": "",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "TestDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "UPDATE DDIC\nSET Status = 2\nWHERE TNAME = '@{item().TNAME}' AND Status = 0",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"receiver": {
						"type": "string",
						"defaultValue": "jandrebad@gmail.com"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-23T12:57:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TestTable')]",
				"[concat(variables('factoryId'), '/linkedServices/TestDB')]"
			]
		}
	]
}